/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFeeManager,
  IFeeManagerInterface,
} from "../../../../contracts/precompiles/IFeeConfigManager.sol/IFeeManager";

const _abi = [
  {
    inputs: [],
    name: "getFeeConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetBlockRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBaseFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseFeeChangeDenominator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBlockGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxBlockGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockGasCostStep",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeConfigLastChangedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "readAllowList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetBlockRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBaseFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseFeeChangeDenominator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBlockGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxBlockGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockGasCostStep",
        type: "uint256",
      },
    ],
    name: "setFeeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setNone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFeeManager__factory {
  static readonly abi = _abi;
  static createInterface(): IFeeManagerInterface {
    return new utils.Interface(_abi) as IFeeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFeeManager {
    return new Contract(address, _abi, signerOrProvider) as IFeeManager;
  }
}
